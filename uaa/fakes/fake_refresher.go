// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/tscolari/cfapi/uaa"
)

type FakeRefresher struct {
	RefreshTokenStub        func(refreshToken string) (*uaa.Tokens, error)
	refreshTokenMutex       sync.RWMutex
	refreshTokenArgsForCall []struct {
		refreshToken string
	}
	refreshTokenReturns struct {
		result1 *uaa.Tokens
		result2 error
	}
}

func (fake *FakeRefresher) RefreshToken(refreshToken string) (*uaa.Tokens, error) {
	fake.refreshTokenMutex.Lock()
	fake.refreshTokenArgsForCall = append(fake.refreshTokenArgsForCall, struct {
		refreshToken string
	}{refreshToken})
	fake.refreshTokenMutex.Unlock()
	if fake.RefreshTokenStub != nil {
		return fake.RefreshTokenStub(refreshToken)
	} else {
		return fake.refreshTokenReturns.result1, fake.refreshTokenReturns.result2
	}
}

func (fake *FakeRefresher) RefreshTokenCallCount() int {
	fake.refreshTokenMutex.RLock()
	defer fake.refreshTokenMutex.RUnlock()
	return len(fake.refreshTokenArgsForCall)
}

func (fake *FakeRefresher) RefreshTokenArgsForCall(i int) string {
	fake.refreshTokenMutex.RLock()
	defer fake.refreshTokenMutex.RUnlock()
	return fake.refreshTokenArgsForCall[i].refreshToken
}

func (fake *FakeRefresher) RefreshTokenReturns(result1 *uaa.Tokens, result2 error) {
	fake.RefreshTokenStub = nil
	fake.refreshTokenReturns = struct {
		result1 *uaa.Tokens
		result2 error
	}{result1, result2}
}

var _ uaa.Refresher = new(FakeRefresher)
